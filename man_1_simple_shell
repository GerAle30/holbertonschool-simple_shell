.TH SIMPLE_SHELL 1 "April 2025" "Version 1.0" "User Commands"
.SH NAME
simple_shell \- a simple Unix command interpreter
.SH SYNOPSIS
.B ./hsh
.SH DESCRIPTION
.B simple_shell
Is a simple command-line interpreter that reads and executes commands from standard input or from a file.
It provides basic shell functionality including command execution, environment variable handling, and built-in commands.
.SH FEATURES
.TP
.B Command execution
Executes external commands found in PATH
.TP
.B Interactive mode
Displays prompt when run from a terminal
.TP
.B Non-interactive mode
Can process commands from pipes or files
.SH BUILT-IN COMMANDS
.TP
.B exit [status]
Exit the shell with optional numeric status (default 0)
.TP
.B env
Print all environment variables
.TP
.B cd [directory]
Change the current directory to the specified directory. If no directory is provided, change to HOME.
.SH PROMPT
When running in interactive mode, the shell displays the prompt:
.B #cisfun$
.SH EXIT STATUS
.TP
.B 0
Success
.TP
.B 1
General error or command not found
.TP
.B Other values
May be returned by executed commands
.SH ENVIRONMENT
.TP
.B PATH
Used to locate executable commands
.TP
.B HOME
Default directory for cd command when no argument is given
.SH FILES
.TP
.B shell.h
Header file containing function prototypes and macro definitions
.TP
.B shell.c
Contains core shell functionality and command handling
.TP
.B builtins.c
Contains implementations of built-in commands
.TP
.B execute.c
Command execution functionality
.TP
.B helpers.c
Utility functions for path handling
.TP
.B main.c
Entry point for the shell
.TP
.B parser.c
Input parsing functionality
.TP
.B path.c
PATH environment variable handling
.SH EXAMPLES
.TP
Run the shell in interactive mode:
.B ./hsh
.TP
Run command in non-interactive mode:
.B echo "ls -l" | ./hsh
.SH AUTHORS
Jean Carlo Carrion Caraballo
.SH BUGS
The code contains several merge conflicts that need to be resolved.
.br
Known issues include:
.TP
- Inconsistent function signatures for handle_builtins() between shell.c and shell.h
.TP
- Return type issue in parser.c where tokens array is returned in one branch but token in another
.TP
- Duplicate functions in builtins.c and shell.c due to merge conflicts
.SH SEE ALSO
.BR sh (1),
.BR bash (1),
